/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import database.ProductsManager;
import entities.Product;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.*;
import java.awt.*;

/**
 *
 * @author Stefan
 */
public class UserClient extends javax.swing.JFrame {

    /**
     * Creates new form UserClient
     */
    private boolean searchBarCleared = false;

    public UserClient() {
        initComponents();
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        setTitle(LoginForm.currentUser.getName() + " - user");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        searchBar = new javax.swing.JTextField();
        searchLabel = new javax.swing.JLabel();
        sortByLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        inLabel = new javax.swing.JLabel();
        userInfoLabel = new javax.swing.JLabel();
        showWishlistButton = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        parentPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Product database (logged in as user)");

        jPanel1.setBackground(new java.awt.Color(116, 158, 199));

        searchBar.setFont(new java.awt.Font("Verdana", 2, 12)); // NOI18N
        searchBar.setForeground(new java.awt.Color(204, 204, 204));
        searchBar.setText("Search...");
        searchBar.setToolTipText("Type your search query here.");
        searchBar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        searchBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBarMouseClicked(evt);
            }
        });
        searchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchBarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchBarKeyTyped(evt);
            }
        });

        searchLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/search.png"))); // NOI18N

        sortByLabel.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        sortByLabel.setText("sort by");

        searchButton.setText("Go!");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        inLabel.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        inLabel.setText("in");

        searchParamMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Name", "Category", "Brand"}));

        sortParamMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"None", "Name", "Brand", "Price"}));

        userInfoLabel.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        userInfoLabel.setText("Welcome " + LoginForm.currentUser.getName());

        showWishlistButton.setText("Show wishlist");
        showWishlistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showWishlistButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userInfoLabel)
                .addGap(31, 712, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(searchLabel)
                .addGap(31, 31, 31)
                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(inLabel)
                .addGap(49, 49, 49)
                .addComponent(searchParamMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(sortByLabel)
                .addGap(53, 53, 53)
                .addComponent(sortParamMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchButton)
                .addGap(34, 34, 34)
                .addComponent(showWishlistButton)
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(userInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchLabel)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(inLabel)
                        .addComponent(searchParamMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sortByLabel)
                        .addComponent(sortParamMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchButton)
                        .addComponent(showWishlistButton)))
                .addGap(29, 29, 29))
        );

        parentPanel.setMaximumSize(new java.awt.Dimension(800, 32767));
        parentPanel.setMinimumSize(new java.awt.Dimension(800, 10));
        parentPanel.setLayout(new java.awt.GridBagLayout());
        scrollPane.setViewportView(parentPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrollPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void populateProductContainer(ResultSet productSet) {
        ArrayList<Product> products
                = ProductsManager.getProductArray(productSet);
        
        
        
        GridBagConstraints c = new GridBagConstraints();
        c.gridx = 0;
        c.gridy = 0;
        
        parentPanel.removeAll();
        parentPanel.revalidate();
        parentPanel.repaint();
        for (Product product : products) {
            ProductPanel productPanel = new ProductPanel(product);
            parentPanel.add(productPanel, c);
            parentPanel.revalidate();
            parentPanel.repaint();
            c.gridy++;
        }
    }

    private void searchBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBarMouseClicked
        // TODO add your handling code here:
        if (!searchBarCleared) {
            searchBar.setText("");
            searchBar.setForeground(new java.awt.Color(51, 51, 51));
            searchBar.setFont(new java.awt.Font("Verdana", 0, 12));
            searchBarCleared = true;
        }
    }//GEN-LAST:event_searchBarMouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed

        // TODO add your handling code here:
        String keyword = searchBar.getText();
        String searchParam = (String) searchParamMenu.getSelectedItem();
        String sortParam = (String) sortParamMenu.getSelectedItem();

        ResultSet results = ProductsManager.searchProducts(searchParam, keyword, sortParam);
        
        populateProductContainer(results);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchBarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarKeyTyped
        // TODO add your handling code here:
        if (!searchBarCleared) {
            searchBar.setText("");
            searchBar.setForeground(new java.awt.Color(51, 51, 51));
            searchBar.setFont(new java.awt.Font("Verdana", 0, 12));
            searchBarCleared = true;
        }
    }//GEN-LAST:event_searchBarKeyTyped

    private void showWishlistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showWishlistButtonActionPerformed
        // TODO add your handling code here:
        LoginForm.currentUser.displayWishlist();
    }//GEN-LAST:event_showWishlistButtonActionPerformed

    private void searchBarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            String keyword = searchBar.getText();
        String searchParam = (String) searchParamMenu.getSelectedItem();
        String sortParam = (String) sortParamMenu.getSelectedItem();

        ResultSet results = ProductsManager.searchProducts(searchParam, keyword, sortParam);
        
        populateProductContainer(results);
        }
    }//GEN-LAST:event_searchBarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new UserClient().setVisible(true);
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel inLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchLabel;
    private final javax.swing.JComboBox<String> searchParamMenu = new javax.swing.JComboBox<>();
    private javax.swing.JButton showWishlistButton;
    private javax.swing.JLabel sortByLabel;
    private final javax.swing.JComboBox<String> sortParamMenu = new javax.swing.JComboBox<>();
    private javax.swing.JLabel userInfoLabel;
    // End of variables declaration//GEN-END:variables
}
